# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

parameters:
  - name: var1
    type: string
    default: test

trigger: none
pool:
  vmImage: windows-latest

stages:
  - stage: deployinfra
    jobs:
      - deployment: RegisterDNS
        displayName: "Register DNS Records"
        environment: 
         name: Dev
         resourceType: VirtualMachine
        strategy:
          runOnce:
            deploy:
              steps:
              - checkout: self
              - script: echo ${{ parameters.var1 }}

              - task: CopyFiles@2
                inputs:
                 SourceFolder: '$(Build.SourcesDirectory)'
                 Contents: '**'
                 TargetFolder: 'c:\build\'


              
              - task: AzurePowerShell@5
                inputs:
                  azureSubscription: 'MCT'
                  ScriptType: 'InlineScript'
                  Inline: |
                    
                    # param(
                    #      [string]$guid,
                    #    [string]$DnsZoneName = 'test.zone'
                    #)
                    # DNS zone to be created inside $DnsZoneName
                    
                    $guid = '0f874c22-eb62-4441-9263-a831bc6e8135'
                    $DnsZoneName = 'test.zone'
                    Write-Output $DnsZoneName 
                    Write-Output 'output'
                    $guidDNSZoneName = $guid + "." + $DnsZoneName
                    # for stand-alone DNS server, not AD integrated
                    $guidDNSZoneFile = $guid + ".dns"
                    $rg = $guid + '.rg'
                    $VmPublicIpAddress = @{}   
                    $pend = Get-AzPrivateEndpoint -ResourceGroupName $rg
                    $nicIds = $pend.NetworkInterfaces.id
                    ForEach ($nicId in $nicIds){
                      $nic = Get-AzNetworkInterface -ResourceId $nicId
                      $VmPublicIpAddress.Add($nic.Tag.vm,$nic.IpConfigurations.PrivateIPAddress) 
                      }
                    Write-Output 'DNS Records to be created:'
                    Write-Output $VmPublicIpAddress
                    
                    $zone = Get-DnsServerZone -Name $guidDNSZoneName
                    if ($zone -eq $null){
                      Write-Output 'Creating DNS Zone'
                      Add-DnsServerPrimaryZone -Name $guidDNSZoneName -zonefile $guidDNSZoneFile
                      Write-Output 'Creating DNS Records'
                      $VmPublicIpAddress.keys | ForEach-Object{
                        Add-DnsServerResourceRecordA -ZoneName $guidDNSZoneName -Name $_ -IPv4Address $VmPublicIpAddress[$_] -computername localhost -CreatePtr
                        }
                      }
                    else {
                      Write-Output "Zone $guidDNSZoneName exists. Zone and records will not be created"    
                      }

                    Write-Outout 'A DNS records in zone $guidDNSZoneName
                    Get-DnsServerResourceRecord -ZoneName $guidDNSZoneName -RRType A | format-Table
                  azurePowerShellVersion: 'LatestVersion'





