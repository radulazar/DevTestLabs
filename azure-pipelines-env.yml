# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

parameters:
  - name: var1
    type: string
    default: test

trigger: none
pool:
  vmImage: windows-latest

stages:
  - stage: deployinfra
    jobs:
      - deployment: RegisterDNS
        displayName: "Register DNS Records"
        environment: 
         name: Dev
         resourceType: VirtualMachine
        strategy:
          runOnce:
            deploy:
              steps:
              - checkout: self
              - script: echo ${{ parameters.var1 }}

              - task: CopyFiles@2
                inputs:
                 SourceFolder: '$(Build.SourcesDirectory)'
                 Contents: '**'
                 TargetFolder: 'c:\build\'

              - task: PowerShell@2
                inputs:
                  targetType: 'inline'
                  script: 'Add-DnsServerPrimaryZone -Name ''zone3.test.zone'' -zonefile ''zone3.dns'''
              
              - task: AzurePowerShell@5
                inputs:
                  azureSubscription: 'MCT'
                  ScriptType: 'InlineScript'
                  Inline: |
                    
                    # param(
                    #      [string]$guid,
                    #    [string]$DnsZoneName = 'test.zone'
                    #)
                    # DNS zone to be created inside $DnsZoneName
                    Write-Output $DnsZoneName
                    $guid = 'zone2'
                    $DnsZoneName = 'test.zone'
                    $guidDNSZoneName = $guid + "." + $DnsZoneName
                    # for stand-alone DNS server
                    $guidDNSZoneFile = $guid + ".dns"

                    function read-Azure-records{
                    param([string] $guid)
                    
                    $pendp_Resources = Get-AzResource -Tag @{ "env" = $guid} -ResourceType "Microsoft.Network/privateEndpoints" 
                    # array of hashtables with vm & IP information to be added to DNS, one hastable object per DNS record
                    $arrayDnsRecords = @()
                    foreach ($pendp_Resource in $pendp_Resources){
                        $pendp_Nic = (Get-AzPrivateEndpoint -Name $pendp_Resource.Name).NetworkInterfaces[0]
                        $nicObj = Get-AzNetworkInterface -ResourceId $pendp_Nic.Id
                        $arrayDnsRecords +=(@{"vm" = $nicObj.Tag.vm; "IP" = $nicObj.IpConfigurations[0].PrivateIpAddress})
                        }
                    return $arrayDnsRecords
                    }
                    
                    ## Get info from Azure and register in onprem DNS
                    $DnsRecords = read-Azure-records($guid)
                    
                    # create DNS zone for the environment
                    Add-DnsServerPrimaryZone -Name $guidDNSZoneName -zonefile $guidDNSZoneFile
                    
                    foreach ($DnsRecord in $DnsRecords){
                        Add-DnsServerResourceRecordA -ZoneName $guidDNSZoneName -Name $DnsRecord.vm -IPv4Address $DnsRecord.IP -computername localhost -CreatePtr   
                    }
                    # list created records
                    Get-DnsServerResourceRecord -ZoneName $guidDNSZoneName -RRType A
                  azurePowerShellVersion: 'LatestVersion'





